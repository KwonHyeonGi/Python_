## 07.20 파이썬 학습
## 리스트와 튜블
  리스트의 생성 방식 리스트명 = ['데이터1', '데이터2', 데이터3'] 의 형식
  중간에 데이터 수정 가능
    요소 추가 리스트명.append('데이터4')
    요소 변경 리스트명[3] = 데이터 6 -> 데이터4가 데이터6으로 이름이 바뀜 *index 사용하기에 [0]은 데이터1
    요소 각제 리스트명.remove[데이터2] -> 데이터2 삭제

  튜플의 생성 방식 튜플명 = (데이터1, 데이터2, 데이터3)
  -> 튜플은 생성 후 변경 불가

----------------- 그럼 변경 불가한 튜플을 사용하는 이유는? 고정성과 가벼운 데이터에 사용 하기 편함

## 딕셔너리
  키와 값의 데이터를 저장하는 자료구조
  딕셔너리명 = {"키1": "값1", "키2": 값2, "키3": "값3"}
  딕서녀리 검색
    print(딕셔너리명["키1"]) -> 값1 이 나옴
    근데 여기서 검색한 키가 없는 경우 error 가 나오게 되는데,
    대신에 print(딕셔너리명.get["키1"]) 로 할 경우 키가 없어도 error 가 아닌 none 으로 반환됌

## 조건문 (if)
  조건문 if는 참과 거짓을 확인하는 것임
          score = 85
        
        if score >= 90:
            print("A 학점입니다.")
        elif score >= 80:
            print("B 학점입니다.")
        else:
            print("C 학점 이하입니다.")

이를 통해서 score는 85점이라는 변수
  첫 if를 통해서 참 거짓을 확인 -> 85점이기에 90점이상이 아님 = 거짓
  elif로 이어감 -> 85점이기에 80점보다 이상임 = 참
    -> 여기서 조건문이 종료되어 "B학점입니다"가 print 됌
  만약 70점이면 두번째 elif에서도 거짓이기에 else로 보여지게 됌

## 반복문(for, while)
  for은 특정 코드를 반복
  while 은 특정 조건이 참인 동안 , 거짓일경우 종료

   for i range (1,6)
    print(i) 
 할 경우 i는 1부터 5까지(range 경우 마지막 숫자 포함 안됌) 프린트 되고 5에서 코드가 완료됌

    count = 0
  while count < 5:
      print(f"현재 카운트: {count}")
      count += 1 # count = count + 1 과 동일
  print("반복 종료!")
할 경우 count 0에서 시작되어 < 5 까지 특정 조건까지 반복됌. 6이 될경우 5보다 크기에 조건에 거짓이 되기에 5까지 반복되고 종료됌.

